// SPDX-License-Identifier: MIT
pragma solidity ^0.8.24;

contract ScoreTracker {
    mapping(address => uint) public scores;
    uint public totalScore;

    function addScore(uint _points) public {
        scores[msg.sender] += _points;
        totalScore += _points;
    }

    function reduceScore(uint _points) public {
        if (scores[msg.sender] >= _points) {
            scores[msg.sender] -= _points;
            totalScore -= _points;
        }
    }

    function resetMyScore() public {
        totalScore -= scores[msg.sender];
        scores[msg.sender] = 0;
    }
}
// SPDX-License-Identifier: MIT
pragma solidity ^0.8.24;

contract ScoreTracker {
    mapping(address => uint) public scores;
    uint public totalScore;

    function addScore(uint _points) public {
        scores[msg.sender] += _points;
        totalScore += _points;
    }

    function reduceScore(uint _points) public {
        if (scores[msg.sender] >= _points) {
            scores[msg.sender] -= _points;
            totalScore -= _points;
        }
    }

    function resetMyScore() public {
        totalScore -= scores[msg.sender];
        scores[msg.sender] = 0;
    }
}
